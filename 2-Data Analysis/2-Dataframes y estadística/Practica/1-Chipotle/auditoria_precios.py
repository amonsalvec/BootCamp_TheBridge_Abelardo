def auditoria_precios(df):
    print("üîç AUDITOR√çA DE PRECIOS POR PRODUCTO\n")

    # 1. Precios distintos por producto
    precios_por_producto = df.groupby('nombre_producto')['precio_producto'].unique()
    print("1Ô∏è‚É£ Precios distintos por producto:\n")
    for producto, precios in precios_por_producto.items():
        print(f"   - {producto}: {list(precios)}")
    
    print("\n" + "-"*50)

    # 2. Productos con m√∫ltiples precios
    conteo_precios = df.groupby('nombre_producto')['precio_producto'].nunique()
    productos_con_precios_variados = conteo_precios[conteo_precios > 1]

    print("2Ô∏è‚É£ Productos con m√∫ltiples precios:\n")
    if not productos_con_precios_variados.empty:
        for producto, n in productos_con_precios_variados.items():
            print(f"   ‚ö†Ô∏è {producto} aparece con {n} precios distintos.")
    else:
        print("   ‚úÖ No se detectaron productos con m√∫ltiples precios.")
    
    print("\n" + "-"*50)

    # 3. Detalle por producto, precio y pedido
    variaciones_precio = (
        df[['id_pedido', 'nombre_producto', 'precio_producto']]
        .drop_duplicates()
        .sort_values(['nombre_producto', 'precio_producto'])
    )

    print("3Ô∏è‚É£ Variaciones de precio por producto y pedido:\n")
    print(variaciones_precio.to_string(index=False))

    print("\n" + "-"*50)

    # 4. Precio m√°s frecuente por producto
    precio_mas_frecuente = df.groupby('nombre_producto')['precio_producto']\
                             .agg(lambda x: x.value_counts().idxmax())

    print("4Ô∏è‚É£ Precio m√°s frecuente por producto:\n")
    for producto, precio in precio_mas_frecuente.items():
        print(f"   - {producto}: {precio}")

    print("\n‚úÖ Auditor√≠a completada.")

return {
    'precios_por_producto': precios_por_producto,
    'productos_con_precios_variados': productos_con_precios_variados,
    'variaciones_precio': variaciones_precio,
    'precio_mas_frecuente': precio_mas_frecuente
}

def auditoria_precios(df):
    """
    Auditor√≠a de coherencia de precios por producto en un DataFrame de pedidos.
    Requiere columnas: 'id_pedido', 'nombre_producto', 'precio_producto'.
    
    Devuelve un diccionario con:
        - precios_por_producto: Series con precios √∫nicos por producto
        - productos_con_precios_variados: Series con productos que tienen m√°s de un precio
        - variaciones_precio: DataFrame con combinaci√≥n (producto, precio, pedido)
        - precio_mas_frecuente: Series con el precio m√°s com√∫n por producto
    """

    print("üîç AUDITOR√çA DE PRECIOS POR PRODUCTO\n")

    # 1. Precios distintos por producto
    precios_por_producto = df.groupby('nombre_producto')['precio_producto'].unique()
    print("1Ô∏è‚É£ Precios distintos por producto:\n")
    for producto, precios in precios_por_producto.items():
        print(f"   - {producto}: {list(precios)}")

    print("\n" + "-"*50)

    # 2. Productos con m√∫ltiples precios
    conteo_precios = df.groupby('nombre_producto')['precio_producto'].nunique()
    productos_con_precios_variados = conteo_precios[conteo_precios > 1]

    print("2Ô∏è‚É£ Productos con m√∫ltiples precios:\n")
    if not productos_con_precios_variados.empty:
        for producto, n in productos_con_precios_variados.items():
            print(f"   ‚ö†Ô∏è {producto} aparece con {n} precios distintos.")
    else:
        print("   ‚úÖ No se detectaron productos con m√∫ltiples precios.")

    print("\n" + "-"*50)

    # 3. Detalle por producto, precio y pedido
    variaciones_precio = (
        df[['id_pedido', 'nombre_producto', 'precio_producto']]
        .drop_duplicates()
        .sort_values(['nombre_producto', 'precio_producto'])
        .reset_index(drop=True)
    )

    print("3Ô∏è‚É£ Variaciones de precio por producto y pedido:\n")
    print(variaciones_precio.to_string(index=False))

    print("\n" + "-"*50)

    # 4. Precio m√°s frecuente por producto
    precio_mas_frecuente = df.groupby('nombre_producto')['precio_producto']\
                             .agg(lambda x: x.value_counts().idxmax())

    print("4Ô∏è‚É£ Precio m√°s frecuente por producto:\n")
    for producto, precio in precio_mas_frecuente.items():
        print(f"   - {producto}: {precio}")

    print("\n‚úÖ Auditor√≠a completada.\n")

    # üîÅ Devolver resultados como objetos
    return {
        'precios_por_producto': precios_por_producto,
        'productos_con_precios_variados': productos_con_precios_variados,
        'variaciones_precio': variaciones_precio,
        'precio_mas_frecuente': precio_mas_frecuente
    }


resultados = auditoria_precios(df)

# Ejemplo: acceder a los productos con m√∫ltiples precios
print("\nProductos con inconsistencias de precio:\n")
print(resultados['productos_con_precios_variados'])
